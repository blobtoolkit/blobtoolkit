name: release-blobtoolkit
env:
  VERSION: 3.4.0

on:
  push:
    tags:
      - "*"

jobs:
  package-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: npm install -g pkg
      - run: ./package-ui.sh
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*

  package-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: npm install -g pkg
      - run: ./package-api.sh
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*

  package-blobtoolkit-linux:
    runs-on: ubuntu-latest
    needs:
      - package-ui
      - package-api
    steps:
      - uses: actions/checkout@v3
      - name: Collect artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./dist
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        run: |
          mkdir -p src/data/bin
          cp dist/artifact/*-linux src/data/bin/
          rm -r dist/artifact
          chmod 755 src/data/bin/*
          ./pip_install_latest.sh manylinux2014_x86_64
          blobtools -v
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*

  package-blobtoolkit-macos:
    runs-on: macos-11
    needs:
      - package-ui
      - package-api
    steps:
      - uses: actions/checkout@v3
      - name: Collect artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./dist
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install setuptools wheel twine
          pip3 install --upgrade cython
      - name: Build and publish
        run: |
          mkdir -p src/data/bin
          cp dist/artifact/*-macos src/data/bin/
          rm -r dist/artifact
          chmod 755 src/data/bin/*
          python3 setup.py sdist bdist_wheel --python-tag py3 --plat-name macosx_11_0_x86_64
          python3 setup.py sdist bdist_wheel --python-tag py3 --plat-name macosx_11_0_arm64
          ./pip_install_latest.sh macosx_10_9_x86_64
          blobtools -v
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

  package-blobtoolkit-windows:
    runs-on: ubuntu-latest
    needs:
      - package-ui
      - package-api
    steps:
      - uses: actions/checkout@v3
      - name: Collect artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./dist
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        run: |
          mkdir -p src/data/bin
          cp dist/artifact/*.exe src/data/bin/
          rm -r dist/artifact
          chmod 755 src/data/bin/*
          python3 setup.py sdist bdist_wheel --python-tag py3 --plat-name win_amd64
          ls dist
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

  create-github-release:
    runs-on: ubuntu-latest
    needs:
      - package-blobtoolkit-linux
      - package-blobtoolkit-macos
      - package-blobtoolkit-windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: ./dist
      - name: create release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          title: "v${{github.ref_name}}"
          files: |
            dist/artifact/blobtoolkit-api-*
            dist/artifact/blobtoolkit-viewer-*
            dist/artifact/blobtoolkit-viewer.tgz*

  upload-to-pypi:
    runs-on: ubuntu-latest
    needs: create-github-release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: ./dist
      - run: |
          mv dist/artifact/*.whl dist/
          mv dist/artifact/*.tar.gz dist/
          rm -r dist/artifact
          ls -lh dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://upload.pypi.org/legacy/

  build-and-push-blobtoolkit:
    runs-on: ubuntu-latest
    needs: upload-to-pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: genomehubs/blobtoolkit
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: src/docker
          push: true
          tags: genomehubs/blobtoolkit:${{ env.VERSION }}, genomehubs/blobtoolkit:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-blobtools:
    runs-on: ubuntu-latest
    needs: upload-to-pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: genomehubs/blobtoolkit-blobtools
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: src/docker/blobtools
          push: true
          tags: genomehubs/blobtoolkit-blobtools:${{ env.VERSION }}, genomehubs/blobtoolkit-blobtools:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-api:
    runs-on: ubuntu-latest
    needs: upload-to-pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: genomehubs/blobtoolkit-api
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: src/docker/api
          push: true
          tags: genomehubs/blobtoolkit-api:${{ env.VERSION }}, genomehubs/blobtoolkit-api:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-viewer:
    runs-on: ubuntu-latest
    needs: upload-to-pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: genomehubs/blobtoolkit-viewer
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: src/docker/viewer
          push: true
          tags: genomehubs/blobtoolkit-viewer:${{ env.VERSION }}, genomehubs/blobtoolkit-viewer:latest
          labels: ${{ steps.meta.outputs.labels }}
